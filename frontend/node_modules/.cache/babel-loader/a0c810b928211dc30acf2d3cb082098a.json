{"ast":null,"code":"import { GET_SUPPLIERS_REQUEST, GET_SUPPLIERS_SUCCESS, GET_SUPPLIERS_FAIL, CREATE_SUPPLIER_REQUEST, CREATE_SUPPLIER_SUCCESS, CREATE_SUPPLIER_FAIL, DELETE_SUPPLIER_REQUEST, DELETE_SUPPLIER_SUCCESS, DELETE_SUPPLIER_FAIL, UPDATE_SUPPLIER_REQUEST, UPDATE_SUPPLIER_SUCCESS, UPDATE_SUPPLIER_FAIL } from '../constants/supplierConstants';\nconst initialState = {\n  suppliers: [],\n  // Danh sách nhà cung cấp, mặc định là mảng rỗng\n  loading: false,\n  // Trạng thái tải dữ liệu\n  error: null // Lỗi nếu có\n\n};\nexport const supplierReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // Khi đang yêu cầu danh sách nhà cung cấp\n    case GET_SUPPLIERS_REQUEST:\n      return { ...state,\n        loading: true\n      };\n    // Khi đã nhận được danh sách nhà cung cấp thành công\n\n    case GET_SUPPLIERS_SUCCESS:\n      return { ...state,\n        loading: false,\n        suppliers: action.payload\n      };\n    // Khi gặp lỗi khi yêu cầu danh sách nhà cung cấp\n\n    case GET_SUPPLIERS_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n    // Khi đang tạo nhà cung cấp mới\n\n    case CREATE_SUPPLIER_REQUEST:\n      return { ...state,\n        loading: true\n      };\n    // Khi tạo nhà cung cấp thành công\n\n    case CREATE_SUPPLIER_SUCCESS:\n      return { ...state,\n        loading: false,\n        suppliers: [...state.suppliers, action.payload] // Thêm nhà cung cấp mới vào mảng\n\n      };\n    // Khi gặp lỗi khi tạo nhà cung cấp\n\n    case CREATE_SUPPLIER_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n    // Khi đang yêu cầu xóa nhà cung cấp\n\n    case DELETE_SUPPLIER_REQUEST:\n      return { ...state,\n        loading: true\n      };\n    // Khi xóa nhà cung cấp thành công\n\n    case DELETE_SUPPLIER_SUCCESS:\n      return { ...state,\n        loading: false,\n        suppliers: state.suppliers.filter(supplier => supplier._id !== action.payload) // Lọc bỏ nhà cung cấp bị xóa\n\n      };\n    // Khi gặp lỗi khi xóa nhà cung cấp\n\n    case DELETE_SUPPLIER_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n    // Khi đang yêu cầu cập nhật nhà cung cấp\n\n    case UPDATE_SUPPLIER_REQUEST:\n      return { ...state,\n        loading: true\n      };\n    // Khi cập nhật nhà cung cấp thành công\n\n    case UPDATE_SUPPLIER_SUCCESS:\n      return { ...state,\n        loading: false,\n        suppliers: state.suppliers.map(supplier => supplier._id === action.payload._id ? action.payload : supplier) // Cập nhật nhà cung cấp theo id\n\n      };\n    // Khi gặp lỗi khi cập nhật nhà cung cấp\n\n    case UPDATE_SUPPLIER_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n    // Trả về state mặc định khi không có action nào khớp\n  }\n};","map":{"version":3,"sources":["C:/Users/This PC/OneDrive/Desktop/doan/doan/doan_tiemPizza/frontend/src/reducers/supplierReducers.js"],"names":["GET_SUPPLIERS_REQUEST","GET_SUPPLIERS_SUCCESS","GET_SUPPLIERS_FAIL","CREATE_SUPPLIER_REQUEST","CREATE_SUPPLIER_SUCCESS","CREATE_SUPPLIER_FAIL","DELETE_SUPPLIER_REQUEST","DELETE_SUPPLIER_SUCCESS","DELETE_SUPPLIER_FAIL","UPDATE_SUPPLIER_REQUEST","UPDATE_SUPPLIER_SUCCESS","UPDATE_SUPPLIER_FAIL","initialState","suppliers","loading","error","supplierReducer","state","action","type","payload","filter","supplier","_id","map"],"mappings":"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","sourcesContent":["import {\r\n    GET_SUPPLIERS_REQUEST,\r\n    GET_SUPPLIERS_SUCCESS,\r\n    GET_SUPPLIERS_FAIL,\r\n    CREATE_SUPPLIER_REQUEST,\r\n    CREATE_SUPPLIER_SUCCESS,\r\n    CREATE_SUPPLIER_FAIL,\r\n    DELETE_SUPPLIER_REQUEST,\r\n    DELETE_SUPPLIER_SUCCESS,\r\n    DELETE_SUPPLIER_FAIL,\r\n    UPDATE_SUPPLIER_REQUEST,\r\n    UPDATE_SUPPLIER_SUCCESS,\r\n    UPDATE_SUPPLIER_FAIL,\r\n} from '../constants/supplierConstants';\r\n\r\nconst initialState = {\r\n    suppliers: [],    // Danh sách nhà cung cấp, mặc định là mảng rỗng\r\n    loading: false,   // Trạng thái tải dữ liệu\r\n    error: null,      // Lỗi nếu có\r\n};\r\n\r\nexport const supplierReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // Khi đang yêu cầu danh sách nhà cung cấp\r\n        case GET_SUPPLIERS_REQUEST:\r\n            return { ...state, loading: true };\r\n\r\n        // Khi đã nhận được danh sách nhà cung cấp thành công\r\n        case GET_SUPPLIERS_SUCCESS:\r\n            return { ...state, loading: false, suppliers: action.payload };\r\n\r\n        // Khi gặp lỗi khi yêu cầu danh sách nhà cung cấp\r\n        case GET_SUPPLIERS_FAIL:\r\n            return { ...state, loading: false, error: action.payload };\r\n\r\n        // Khi đang tạo nhà cung cấp mới\r\n        case CREATE_SUPPLIER_REQUEST:\r\n            return { ...state, loading: true };\r\n\r\n        // Khi tạo nhà cung cấp thành công\r\n        case CREATE_SUPPLIER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                suppliers: [...state.suppliers, action.payload],  // Thêm nhà cung cấp mới vào mảng\r\n            };\r\n\r\n        // Khi gặp lỗi khi tạo nhà cung cấp\r\n        case CREATE_SUPPLIER_FAIL:\r\n            return { ...state, loading: false, error: action.payload };\r\n\r\n        // Khi đang yêu cầu xóa nhà cung cấp\r\n        case DELETE_SUPPLIER_REQUEST:\r\n            return { ...state, loading: true };\r\n\r\n        // Khi xóa nhà cung cấp thành công\r\n        case DELETE_SUPPLIER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                suppliers: state.suppliers.filter(\r\n                    (supplier) => supplier._id !== action.payload\r\n                ),  // Lọc bỏ nhà cung cấp bị xóa\r\n            };\r\n\r\n        // Khi gặp lỗi khi xóa nhà cung cấp\r\n        case DELETE_SUPPLIER_FAIL:\r\n            return { ...state, loading: false, error: action.payload };\r\n\r\n        // Khi đang yêu cầu cập nhật nhà cung cấp\r\n        case UPDATE_SUPPLIER_REQUEST:\r\n            return { ...state, loading: true };\r\n\r\n        // Khi cập nhật nhà cung cấp thành công\r\n        case UPDATE_SUPPLIER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                suppliers: state.suppliers.map((supplier) =>\r\n                    supplier._id === action.payload._id ? action.payload : supplier\r\n                ),  // Cập nhật nhà cung cấp theo id\r\n            };\r\n\r\n        // Khi gặp lỗi khi cập nhật nhà cung cấp\r\n        case UPDATE_SUPPLIER_FAIL:\r\n            return { ...state, loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;  // Trả về state mặc định khi không có action nào khớp\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}