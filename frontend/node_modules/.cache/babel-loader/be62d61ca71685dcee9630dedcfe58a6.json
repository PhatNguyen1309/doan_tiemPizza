{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\This PC\\\\OneDrive\\\\Desktop\\\\doan\\\\doan\\\\doan_tiemPizza\\\\frontend\\\\src\\\\components\\\\cart\\\\Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport MetaData from '../layout/MetaData';\nimport CheckoutSteps from './CheckoutSteps';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createOrder, clearErrors } from '../../actions/orderActions';\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nconst options = {\n  style: {\n    base: {\n      fontSize: '16px'\n    },\n    invalid: {\n      color: '#9e2146'\n    }\n  }\n};\n\nconst Payment = ({\n  history\n}) => {\n  _s();\n\n  const alert = useAlert();\n  const stripe = useStripe();\n  const elements = useElements();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    cartItems,\n    shippingInfo\n  } = useSelector(state => state.cart);\n  const {\n    error\n  } = useSelector(state => state.newOrder);\n  const [paymentMethod, setPaymentMethod] = useState('card'); // Default to 'card' payment method\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, error]); // cart, ship info\n\n  const order = {\n    orderItems: cartItems,\n    shippingInfo\n  };\n  const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\n\n  if (orderInfo) {\n    order.itemsPrice = orderInfo.itemsPrice;\n    order.shippingPrice = orderInfo.shippingPrice;\n    order.taxPrice = orderInfo.taxPrice;\n    order.totalPrice = orderInfo.totalPrice;\n  }\n\n  const paymentData = {\n    amount: Math.round(orderInfo.totalPrice) // total price\n\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    document.querySelector('#pay_btn').disabled = true; // disable the pay button\n    // Nếu thanh toán bằng tiền mặt\n\n    if (paymentMethod === 'cash') {\n      order.paymentInfo = {\n        method: 'Cash on Delivery',\n        status: 'Not Paid'\n      };\n      dispatch(createOrder(order)); // Gọi action tạo đơn hàng\n\n      history.push('/success'); // Chuyển hướng tới trang thành công\n    } else {\n      let res;\n\n      try {\n        const config = {\n          // config header type\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        res = await axios.post('/api/v1/payment/process', paymentData, config); // gọi API thanh toán\n\n        const clientSecret = res.data.client_secret; // client_secret json client\n\n        console.log(clientSecret);\n\n        if (!stripe || !elements) {\n          // dữ liệu thanh toán\n          return;\n        }\n\n        const result = await stripe.confirmCardPayment(clientSecret, {\n          // Xác thực thông tin thẻ\n          payment_method: {\n            card: elements.getElement(CardNumberElement),\n            billing_details: {\n              // chi tiết thanh toán\n              name: user.name,\n              email: user.email\n            }\n          }\n        });\n\n        if (result.error) {\n          alert.error(result.error.message); // Hiển thị lỗi nếu có\n\n          document.querySelector('#pay_btn').disabled = false; // Kích hoạt lại nút thanh toán\n        } else {\n          if (result.paymentIntent.status === 'succeeded') {\n            order.paymentInfo = {\n              // Thêm thông tin thanh toán vào đơn hàng\n              id: result.paymentIntent.id,\n              status: result.paymentIntent.status\n            };\n            dispatch(createOrder(order)); // Gọi action tạo đơn hàng\n\n            history.push('/success'); // Chuyển hướng đến trang thành công\n          } else {\n            alert.error('Có một số vấn đề trong khi xử lý thanh toán');\n          }\n        }\n      } catch (error) {\n        document.querySelector('#pay_btn').disabled = false;\n        alert.error(error.response.data.message);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Thông tin thanh toán'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      shipping: true,\n      confirmOrder: true,\n      payment: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10 col-lg-5\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"shadow-lg\",\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"mb-4\",\n            children: \"Th\\xF4ng tin thanh to\\xE1n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"paymentMethod\",\n                value: \"card\",\n                checked: paymentMethod === 'card',\n                onChange: () => setPaymentMethod('card')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), \"Thanh to\\xE1n qua th\\u1EBB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), paymentMethod === 'card' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"card_num_field\",\n                children: \"S\\u1ED1 th\\u1EBB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CardNumberElement, {\n                type: \"text\",\n                id: \"card_num_field\",\n                className: \"form-control\",\n                options: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"card_exp_field\",\n                children: \"H\\u1EA1n th\\u1EBB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CardExpiryElement, {\n                type: \"text\",\n                id: \"card_exp_field\",\n                className: \"form-control\",\n                options: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"card_cvc_field\",\n                children: \"S\\u1ED1 CVC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CardCvcElement, {\n                type: \"text\",\n                id: \"card_cvc_field\",\n                className: \"form-control\",\n                options: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"paymentMethod\",\n                value: \"cash\",\n                checked: paymentMethod === 'cash',\n                onChange: () => setPaymentMethod('cash')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this), \"Thanh to\\xE1n khi nh\\u1EADn h\\xE0ng\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"pay_btn\",\n            type: \"submit\",\n            className: \"btn btn-block py-3\",\n            children: [\"Thanh to\\xE1n \", ` - ${(orderInfo && orderInfo.totalPrice).toLocaleString()}`, \"\\u0111\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Payment, \"O4CvITh7/xsCBNFx0L/hbDSBNqU=\", false, function () {\n  return [useAlert, useStripe, useElements, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["C:/Users/This PC/OneDrive/Desktop/doan/doan/doan_tiemPizza/frontend/src/components/cart/Payment.js"],"names":["React","Fragment","useEffect","useState","MetaData","CheckoutSteps","useAlert","useDispatch","useSelector","createOrder","clearErrors","useStripe","useElements","CardNumberElement","CardExpiryElement","CardCvcElement","axios","options","style","base","fontSize","invalid","color","Payment","history","alert","stripe","elements","dispatch","user","state","auth","cartItems","shippingInfo","cart","error","newOrder","paymentMethod","setPaymentMethod","order","orderItems","orderInfo","JSON","parse","sessionStorage","getItem","itemsPrice","shippingPrice","taxPrice","totalPrice","paymentData","amount","Math","round","submitHandler","e","preventDefault","document","querySelector","disabled","paymentInfo","method","status","push","res","config","headers","post","clientSecret","data","client_secret","console","log","result","confirmCardPayment","payment_method","card","getElement","billing_details","name","email","message","paymentIntent","id","response","toLocaleString"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AAEA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,4BAAzC;AAEA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,iBAAjC,EAAoDC,iBAApD,EAAuEC,cAAvE,QAA6F,yBAA7F;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE;AADR,KADH;AAIHC,IAAAA,OAAO,EAAE;AACLC,MAAAA,KAAK,EAAE;AADF;AAJN;AADK,CAAhB;;AAWA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAE7B,QAAMC,KAAK,GAAGnB,QAAQ,EAAtB;AACA,QAAMoB,MAAM,GAAGf,SAAS,EAAxB;AACA,QAAMgB,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,QAAQ,GAAGrB,WAAW,EAA5B;AAEA,QAAM;AAAEsB,IAAAA;AAAF,MAAWrB,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA5B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BzB,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACI,IAAhB,CAA/C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAY3B,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACM,QAAhB,CAA7B;AAEA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCnC,QAAQ,CAAC,MAAD,CAAlD,CAX6B,CAWgC;;AAE7DD,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIiC,KAAJ,EAAW;AACPV,MAAAA,KAAK,CAACU,KAAN,CAAYA,KAAZ;AACAP,MAAAA,QAAQ,CAAClB,WAAW,EAAZ,CAAR;AACH;AAEJ,GAPQ,EAON,CAACkB,QAAD,EAAWH,KAAX,EAAkBU,KAAlB,CAPM,CAAT,CAb6B,CAsB7B;;AACA,QAAMI,KAAK,GAAG;AACVC,IAAAA,UAAU,EAAER,SADF;AAEVC,IAAAA;AAFU,GAAd;AAKA,QAAMQ,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAX,CAAlB;;AACA,MAAIJ,SAAJ,EAAe;AACXF,IAAAA,KAAK,CAACO,UAAN,GAAmBL,SAAS,CAACK,UAA7B;AACAP,IAAAA,KAAK,CAACQ,aAAN,GAAsBN,SAAS,CAACM,aAAhC;AACAR,IAAAA,KAAK,CAACS,QAAN,GAAiBP,SAAS,CAACO,QAA3B;AACAT,IAAAA,KAAK,CAACU,UAAN,GAAmBR,SAAS,CAACQ,UAA7B;AACH;;AAED,QAAMC,WAAW,GAAG;AAChBC,IAAAA,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAWZ,SAAS,CAACQ,UAArB,CADQ,CAC0B;;AAD1B,GAApB;;AAIA,QAAMK,aAAa,GAAG,MAAOC,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,QAAnC,GAA8C,IAA9C,CAH+B,CAGqB;AAEpD;;AACA,QAAItB,aAAa,KAAK,MAAtB,EAA8B;AAC1BE,MAAAA,KAAK,CAACqB,WAAN,GAAoB;AAChBC,QAAAA,MAAM,EAAE,kBADQ;AAEhBC,QAAAA,MAAM,EAAE;AAFQ,OAApB;AAKAlC,MAAAA,QAAQ,CAACnB,WAAW,CAAC8B,KAAD,CAAZ,CAAR,CAN0B,CAMK;;AAE/Bf,MAAAA,OAAO,CAACuC,IAAR,CAAa,UAAb,EAR0B,CAQC;AAC9B,KATD,MASO;AACH,UAAIC,GAAJ;;AACA,UAAI;AAEA,cAAMC,MAAM,GAAG;AAAE;AACbC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AADE,SAAf;AAMAF,QAAAA,GAAG,GAAG,MAAMhD,KAAK,CAACmD,IAAN,CAAW,yBAAX,EAAsCjB,WAAtC,EAAmDe,MAAnD,CAAZ,CARA,CAQuE;;AAEvE,cAAMG,YAAY,GAAGJ,GAAG,CAACK,IAAJ,CAASC,aAA9B,CAVA,CAU6C;;AAE7CC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;;AAEA,YAAI,CAAC1C,MAAD,IAAW,CAACC,QAAhB,EAA0B;AAAE;AACxB;AACH;;AAED,cAAM8C,MAAM,GAAG,MAAM/C,MAAM,CAACgD,kBAAP,CAA0BN,YAA1B,EAAwC;AAAE;AAC3DO,UAAAA,cAAc,EAAE;AACZC,YAAAA,IAAI,EAAEjD,QAAQ,CAACkD,UAAT,CAAoBhE,iBAApB,CADM;AAEZiE,YAAAA,eAAe,EAAE;AAAE;AACfC,cAAAA,IAAI,EAAElD,IAAI,CAACkD,IADE;AAEbC,cAAAA,KAAK,EAAEnD,IAAI,CAACmD;AAFC;AAFL;AADyC,SAAxC,CAArB;;AAUA,YAAIP,MAAM,CAACtC,KAAX,EAAkB;AACdV,UAAAA,KAAK,CAACU,KAAN,CAAYsC,MAAM,CAACtC,KAAP,CAAa8C,OAAzB,EADc,CACqB;;AACnCxB,UAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,QAAnC,GAA8C,KAA9C,CAFc,CAEuC;AACxD,SAHD,MAGO;AACH,cAAIc,MAAM,CAACS,aAAP,CAAqBpB,MAArB,KAAgC,WAApC,EAAiD;AAC7CvB,YAAAA,KAAK,CAACqB,WAAN,GAAoB;AAAG;AACnBuB,cAAAA,EAAE,EAAEV,MAAM,CAACS,aAAP,CAAqBC,EADT;AAEhBrB,cAAAA,MAAM,EAAEW,MAAM,CAACS,aAAP,CAAqBpB;AAFb,aAApB;AAKAlC,YAAAA,QAAQ,CAACnB,WAAW,CAAC8B,KAAD,CAAZ,CAAR,CAN6C,CAMhB;;AAE7Bf,YAAAA,OAAO,CAACuC,IAAR,CAAa,UAAb,EAR6C,CAQpB;AAC5B,WATD,MASO;AACHtC,YAAAA,KAAK,CAACU,KAAN,CAAY,6CAAZ;AACH;AACJ;AAEJ,OA9CD,CA8CE,OAAOA,KAAP,EAAc;AACZsB,QAAAA,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCC,QAAnC,GAA8C,KAA9C;AACAlC,QAAAA,KAAK,CAACU,KAAN,CAAYA,KAAK,CAACiD,QAAN,CAAef,IAAf,CAAoBY,OAAhC;AACH;AACJ;AACJ,GApED;;AAsEA,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,aAAD;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,YAAY,MAApC;AAAqC,MAAA,OAAO;AAA5C;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,QAAQ,EAAE3B,aAAtC;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACI;AAAA,sCACI;AACI,gBAAA,IAAI,EAAC,OADT;AAEI,gBAAA,IAAI,EAAC,eAFT;AAGI,gBAAA,KAAK,EAAC,MAHV;AAII,gBAAA,OAAO,EAAEjB,aAAa,KAAK,MAJ/B;AAKI,gBAAA,QAAQ,EAAE,MAAMC,gBAAgB,CAAC,MAAD;AALpC;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAiBKD,aAAa,KAAK,MAAlB,iBACG;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,iBAAD;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,EAAE,EAAC,gBAFP;AAGI,gBAAA,SAAS,EAAC,cAHd;AAII,gBAAA,OAAO,EAAEpB;AAJb;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAWI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,iBAAD;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,EAAE,EAAC,gBAFP;AAGI,gBAAA,SAAS,EAAC,cAHd;AAII,gBAAA,OAAO,EAAEA;AAJb;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,eAqBI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,cAAD;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,EAAE,EAAC,gBAFP;AAGI,gBAAA,SAAS,EAAC,cAHd;AAII,gBAAA,OAAO,EAAEA;AAJb;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBJ;AAAA,0BAlBR,eAmDI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACI;AAAA,sCACI;AACI,gBAAA,IAAI,EAAC,OADT;AAEI,gBAAA,IAAI,EAAC,eAFT;AAGI,gBAAA,KAAK,EAAC,MAHV;AAII,gBAAA,OAAO,EAAEoB,aAAa,KAAK,MAJ/B;AAKI,gBAAA,QAAQ,EAAE,MAAMC,gBAAgB,CAAC,MAAD;AALpC;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAnDJ,eAgEI;AACI,YAAA,EAAE,EAAC,SADP;AAEI,YAAA,IAAI,EAAC,QAFT;AAGI,YAAA,SAAS,EAAC,oBAHd;AAAA,yCAKiB,MAAK,CAACG,SAAS,IAAIA,SAAS,CAACQ,UAAxB,EAAoCoC,cAApC,EAAqD,EAL3E;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsFH,CApMD;;GAAM9D,O;UAEYjB,Q,EACCK,S,EACEC,W,EACAL,W,EAEAC,W,EACmBA,W,EAClBA,W;;;KAThBe,O;AAsMN,eAAeA,OAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\n\nimport MetaData from '../layout/MetaData'\nimport CheckoutSteps from './CheckoutSteps'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createOrder, clearErrors } from '../../actions/orderActions'\n\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js'\n\nimport axios from 'axios'\n\nconst options = {\n    style: {\n        base: {\n            fontSize: '16px'\n        },\n        invalid: {\n            color: '#9e2146'\n        }\n    }\n}\n\nconst Payment = ({ history }) => {\n\n    const alert = useAlert();\n    const stripe = useStripe();\n    const elements = useElements();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth)\n    const { cartItems, shippingInfo } = useSelector(state => state.cart);\n    const { error } = useSelector(state => state.newOrder)\n\n    const [paymentMethod, setPaymentMethod] = useState('card');  // Default to 'card' payment method\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, error])\n\n    // cart, ship info\n    const order = {\n        orderItems: cartItems,\n        shippingInfo\n    }\n\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\n    if (orderInfo) {\n        order.itemsPrice = orderInfo.itemsPrice\n        order.shippingPrice = orderInfo.shippingPrice\n        order.taxPrice = orderInfo.taxPrice\n        order.totalPrice = orderInfo.totalPrice\n    }\n\n    const paymentData = {\n        amount: Math.round(orderInfo.totalPrice)  // total price\n    }\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n\n        document.querySelector('#pay_btn').disabled = true; // disable the pay button\n\n        // Nếu thanh toán bằng tiền mặt\n        if (paymentMethod === 'cash') {\n            order.paymentInfo = {\n                method: 'Cash on Delivery',\n                status: 'Not Paid'\n            };\n\n            dispatch(createOrder(order));  // Gọi action tạo đơn hàng\n\n            history.push('/success');  // Chuyển hướng tới trang thành công\n        } else {\n            let res;\n            try {\n\n                const config = { // config header type\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }\n\n                res = await axios.post('/api/v1/payment/process', paymentData, config) // gọi API thanh toán\n\n                const clientSecret = res.data.client_secret; // client_secret json client\n\n                console.log(clientSecret);\n\n                if (!stripe || !elements) { // dữ liệu thanh toán\n                    return;\n                }\n\n                const result = await stripe.confirmCardPayment(clientSecret, { // Xác thực thông tin thẻ\n                    payment_method: {\n                        card: elements.getElement(CardNumberElement),\n                        billing_details: { // chi tiết thanh toán\n                            name: user.name,\n                            email: user.email\n                        }\n                    }\n                });\n\n                if (result.error) {\n                    alert.error(result.error.message); // Hiển thị lỗi nếu có\n                    document.querySelector('#pay_btn').disabled = false; // Kích hoạt lại nút thanh toán\n                } else {\n                    if (result.paymentIntent.status === 'succeeded') {\n                        order.paymentInfo = {  // Thêm thông tin thanh toán vào đơn hàng\n                            id: result.paymentIntent.id,\n                            status: result.paymentIntent.status\n                        }\n\n                        dispatch(createOrder(order)) // Gọi action tạo đơn hàng\n\n                        history.push('/success') // Chuyển hướng đến trang thành công\n                    } else {\n                        alert.error('Có một số vấn đề trong khi xử lý thanh toán')\n                    }\n                }\n\n            } catch (error) {\n                document.querySelector('#pay_btn').disabled = false;\n                alert.error(error.response.data.message)\n            }\n        }\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Thông tin thanh toán'} />\n\n            <CheckoutSteps shipping confirmOrder payment />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-4\">Thông tin thanh toán</h1>\n\n                        {/* Chọn phương thức thanh toán */}\n                        <div className=\"form-group\">\n                            <label>\n                                <input\n                                    type=\"radio\"\n                                    name=\"paymentMethod\"\n                                    value=\"card\"\n                                    checked={paymentMethod === 'card'}\n                                    onChange={() => setPaymentMethod('card')}\n                                />\n                                Thanh toán qua thẻ\n                            </label>\n                        </div>\n\n                        {paymentMethod === 'card' && (\n                            <>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"card_num_field\">Số thẻ</label>\n                                    <CardNumberElement\n                                        type=\"text\"\n                                        id=\"card_num_field\"\n                                        className=\"form-control\"\n                                        options={options}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"card_exp_field\">Hạn thẻ</label>\n                                    <CardExpiryElement\n                                        type=\"text\"\n                                        id=\"card_exp_field\"\n                                        className=\"form-control\"\n                                        options={options}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"card_cvc_field\">Số CVC</label>\n                                    <CardCvcElement\n                                        type=\"text\"\n                                        id=\"card_cvc_field\"\n                                        className=\"form-control\"\n                                        options={options}\n                                    />\n                                </div>\n                            </>\n                        )}\n\n                        <div className=\"form-group\">\n                            <label>\n                                <input\n                                    type=\"radio\"\n                                    name=\"paymentMethod\"\n                                    value=\"cash\"\n                                    checked={paymentMethod === 'cash'}\n                                    onChange={() => setPaymentMethod('cash')}\n                                />\n                                Thanh toán khi nhận hàng\n                            </label>\n                        </div>\n\n                        <button\n                            id=\"pay_btn\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                        >\n                            Thanh toán {` - ${(orderInfo && orderInfo.totalPrice).toLocaleString()}`}đ\n                        </button>\n\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default Payment"]},"metadata":{},"sourceType":"module"}