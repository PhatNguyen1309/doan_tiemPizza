{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\This PC\\\\OneDrive\\\\Desktop\\\\doan\\\\doan\\\\doan_tiemPizza\\\\frontend\\\\src\\\\components\\\\admin\\\\UsersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport MetaData from '../layout/MetaData';\nimport Loader from '../layout/Loader';\nimport Sidebar from './Sidebar';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { allUsers, deleteUser, clearErrors } from '../../actions/userActions';\nimport { DELETE_USER_RESET } from '../../constants/userConstants';\n\nconst UsersList = ({\n  history\n}) => {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    users\n  } = useSelector(state => state.allUsers);\n  const {\n    isDeleted\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch(allUsers());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success('Người dùng đã được xóa thành công');\n      history.push('/admin/users');\n      dispatch({\n        type: DELETE_USER_RESET\n      });\n    }\n  }, [dispatch, alert, error, isDeleted, history]);\n\n  const deleteUserHandler = id => {\n    if (window.confirm('Bạn có chắc muốn xóa tài khoản này?')) {\n      dispatch(deleteUser(id));\n    }\n  };\n\n  const setUsers = () => {\n    const data = {\n      columns: [{\n        label: 'ID',\n        field: 'id',\n        sort: 'asc'\n      }, {\n        label: 'Tên người dùng',\n        field: 'name',\n        sort: 'asc'\n      }, {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc'\n      }, {\n        label: 'Quyền',\n        field: 'role',\n        sort: 'asc'\n      }, {\n        label: 'Trạng thái tài khoản',\n        field: 'status',\n        sort: 'asc'\n      }, {\n        label: 'Hành động',\n        field: 'actions'\n      }],\n      rows: []\n    };\n    users.forEach(userr => {\n      let hoat_dong = '';\n\n      if (userr.role === \"look\") {\n        userr.role = \"Đã bị khóa\";\n      }\n\n      if (userr.role === \"staff\") {\n        userr.role = \"Nhân viên\";\n      }\n\n      if (userr.role === \"user\") {\n        userr.role = \"Người dùng\";\n      }\n\n      if (userr.role === \"admin\") {\n        userr.role = \"Quản trị\";\n      }\n\n      if (userr.role === \"system\") {\n        userr.role = \"Hệ thống\";\n      }\n\n      if (userr.role === \"Người dùng\" || \"Quản trị\" || \"Nhân viên\" || \"Hệ thống\") {\n        hoat_dong = \"Hoạt động\";\n      }\n\n      data.rows.push({\n        id: userr._id,\n        name: userr.name,\n        email: userr.email,\n        role: userr.role,\n        status: userr.role && String(userr.role).includes('Đã bị khóa') ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-key-fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 51\n          }, this), \" \", userr.role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 53\n          }, this), \" \", hoat_dong]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 23\n        }, this),\n        actions: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [\"\\u2003\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/admin/user/${userr._id}`,\n            className: \"btn btn-primary py-1 px-2\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-pencil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), \"\\u2003\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger py-1 px-2\",\n            onClick: () => deleteUserHandler(userr._id),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 26\n        }, this)\n      });\n    });\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'All Users'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-10\",\n        children: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"my-5\",\n            children: \"T\\u1EA5t c\\u1EA3 ng\\u01B0\\u1EDDi d\\xF9ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(MDBDataTable, {\n            data: setUsers(),\n            className: \"px-3\",\n            bordered: true,\n            striped: true,\n            hover: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UsersList, \"Y04wUDJmFcgGjJIIVQw3/P3HcoI=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["C:/Users/This PC/OneDrive/Desktop/doan/doan/doan_tiemPizza/frontend/src/components/admin/UsersList.js"],"names":["React","Fragment","useEffect","Link","MDBDataTable","MetaData","Loader","Sidebar","useAlert","useDispatch","useSelector","allUsers","deleteUser","clearErrors","DELETE_USER_RESET","UsersList","history","alert","dispatch","loading","error","users","state","isDeleted","user","success","push","type","deleteUserHandler","id","window","confirm","setUsers","data","columns","label","field","sort","rows","forEach","userr","hoat_dong","role","_id","name","email","status","String","includes","color","actions"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allUsers, deleteUser, clearErrors } from '../../actions/userActions'\nimport { DELETE_USER_RESET } from '../../constants/userConstants'\n\nconst UsersList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, users } = useSelector(state => state.allUsers);\n    const { isDeleted } = useSelector(state => state.user)\n\n    useEffect(() => {\n        dispatch(allUsers());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('Người dùng đã được xóa thành công');\n            history.push('/admin/users');\n            dispatch({ type: DELETE_USER_RESET })\n        }\n\n    }, [dispatch, alert, error, isDeleted, history])\n\n    const deleteUserHandler = (id) => {\n        if (window.confirm('Bạn có chắc muốn xóa tài khoản này?')) {\n            dispatch(deleteUser(id));\n        }\n    }\n\n    const setUsers = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Tên người dùng',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Quyền',\n                    field: 'role',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Trạng thái tài khoản',\n                    field: 'status',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Hành động',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        users.forEach(userr => {\n            let hoat_dong = '';\n            if (userr.role === \"look\") {\n                userr.role = \"Đã bị khóa\"\n            }\n            if (userr.role === \"staff\") {\n                userr.role = \"Nhân viên\"\n            }\n            if (userr.role === \"user\") {\n                userr.role = \"Người dùng\"\n            }\n            if (userr.role === \"admin\") {\n                userr.role = \"Quản trị\"\n            }\n            if (userr.role === \"system\") {\n                userr.role = \"Hệ thống\"\n            }\n            if (userr.role === \"Người dùng\" || \"Quản trị\" || \"Nhân viên\" || \"Hệ thống\") {\n                hoat_dong = \"Hoạt động\"\n            }\n\n            data.rows.push({\n                id: userr._id,\n                name: userr.name,\n                email: userr.email,\n                role: userr.role,\n                status: userr.role && String(userr.role).includes('Đã bị khóa')\n                    ? <p style={{ color: 'red' }}><i className=\"bi bi-key-fill\"></i> {userr.role}</p>\n                    : <p style={{ color: 'green' }}><i className=\"bi bi-activity\"></i> {hoat_dong}</p>,\n                actions: <Fragment>\n                    &emsp;\n                    <Link to={`/admin/user/${userr._id}`} className=\"btn btn-primary py-1 px-2\">\n                        <i className=\"fa fa-pencil\"></i>\n                    </Link>&emsp;\n                    <button\n                        className=\"btn btn-danger py-1 px-2\"\n                        onClick={() => deleteUserHandler(userr._id)}\n                    >\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'All Users'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">Tất cả người dùng</h1>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setUsers()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UsersList"]},"metadata":{},"sourceType":"module"}