{"ast":null,"code":"import { GET_SUPPLIERS_REQUEST, GET_SUPPLIERS_SUCCESS, GET_SUPPLIERS_FAIL, GET_SUPPLIER_DETAILS_REQUEST, GET_SUPPLIER_DETAILS_SUCCESS, GET_SUPPLIER_DETAILS_FAIL, CREATE_SUPPLIER_REQUEST, CREATE_SUPPLIER_SUCCESS, CREATE_SUPPLIER_FAIL, DELETE_SUPPLIER_SUCCESS, DELETE_SUPPLIER_FAIL, UPDATE_SUPPLIER_SUCCESS, UPDATE_SUPPLIER_FAIL, SUPPLIER_DETAILS_REQUEST, SUPPLIER_DETAILS_SUCCESS, SUPPLIER_DETAILS_FAIL, CLEAR_ERRORS } from '../constants/supplierConstants';\nimport axios from 'axios';\nexport const getSupplierDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: GET_SUPPLIER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/suppliers/${id}`);\n    dispatch({\n      type: GET_SUPPLIER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_SUPPLIER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // Lấy danh sách nhà cung cấp\n\nexport const fetchSuppliers = () => async dispatch => {\n  try {\n    dispatch({\n      type: GET_SUPPLIERS_REQUEST\n    }); // Gọi API trực tiếp để lấy danh sách nhà cung cấp\n\n    const {\n      data\n    } = await axios.get('/api/v1/suppliers');\n    dispatch({\n      type: GET_SUPPLIERS_SUCCESS,\n      payload: data.suppliers\n    });\n  } catch (error) {\n    const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: GET_SUPPLIERS_FAIL,\n      payload: errorMessage\n    });\n  }\n}; // Thêm mới nhà cung cấp\n\nexport const addSupplier = supplierData => async dispatch => {\n  try {\n    dispatch({\n      type: CREATE_SUPPLIER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/suppliers', supplierData, config);\n    dispatch({\n      type: CREATE_SUPPLIER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_SUPPLIER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Cập nhật nhà cung cấp\n\nexport const updateSupplier = (id, supplierData) => async dispatch => {\n  try {\n    // Gọi API để cập nhật nhà cung cấp\n    const {\n      data\n    } = await axios.put(`/api/v1/suppliers/${id}`, supplierData);\n    dispatch({\n      type: UPDATE_SUPPLIER_SUCCESS,\n      payload: data.supplier\n    });\n  } catch (error) {\n    const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: UPDATE_SUPPLIER_FAIL,\n      payload: errorMessage\n    });\n  }\n}; // Xóa nhà cung cấp\n\nexport const removeSupplier = id => async dispatch => {\n  try {\n    // Gọi API để xóa nhà cung cấp\n    await axios.delete(`/api/v1/suppliers/${id}`);\n    dispatch({\n      type: DELETE_SUPPLIER_SUCCESS,\n      payload: id\n    });\n  } catch (error) {\n    const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: DELETE_SUPPLIER_FAIL,\n      payload: errorMessage\n    });\n  }\n};\nexport const fetchSupplierDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: SUPPLIER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/suppliers/${id}`);\n    dispatch({\n      type: SUPPLIER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SUPPLIER_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const clearErrors = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["C:/Users/This PC/OneDrive/Desktop/doan/doan/doan_tiemPizza/frontend/src/actions/supplierActions.js"],"names":["GET_SUPPLIERS_REQUEST","GET_SUPPLIERS_SUCCESS","GET_SUPPLIERS_FAIL","GET_SUPPLIER_DETAILS_REQUEST","GET_SUPPLIER_DETAILS_SUCCESS","GET_SUPPLIER_DETAILS_FAIL","CREATE_SUPPLIER_REQUEST","CREATE_SUPPLIER_SUCCESS","CREATE_SUPPLIER_FAIL","DELETE_SUPPLIER_SUCCESS","DELETE_SUPPLIER_FAIL","UPDATE_SUPPLIER_SUCCESS","UPDATE_SUPPLIER_FAIL","SUPPLIER_DETAILS_REQUEST","SUPPLIER_DETAILS_SUCCESS","SUPPLIER_DETAILS_FAIL","CLEAR_ERRORS","axios","getSupplierDetails","id","dispatch","type","data","get","payload","error","response","message","fetchSuppliers","suppliers","errorMessage","addSupplier","supplierData","config","headers","post","updateSupplier","put","supplier","removeSupplier","delete","fetchSupplierDetails","clearErrors"],"mappings":"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","sourcesContent":["import {\r\n    GET_SUPPLIERS_REQUEST,\r\n    GET_SUPPLIERS_SUCCESS,\r\n    GET_SUPPLIERS_FAIL,\r\n    GET_SUPPLIER_DETAILS_REQUEST,\r\n    GET_SUPPLIER_DETAILS_SUCCESS,\r\n    GET_SUPPLIER_DETAILS_FAIL,\r\n    CREATE_SUPPLIER_REQUEST,\r\n    CREATE_SUPPLIER_SUCCESS,\r\n    CREATE_SUPPLIER_FAIL,\r\n    DELETE_SUPPLIER_SUCCESS,\r\n    DELETE_SUPPLIER_FAIL,\r\n    UPDATE_SUPPLIER_SUCCESS,\r\n    UPDATE_SUPPLIER_FAIL,\r\n    SUPPLIER_DETAILS_REQUEST,\r\n    SUPPLIER_DETAILS_SUCCESS,\r\n    SUPPLIER_DETAILS_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/supplierConstants';\r\nimport axios from 'axios';\r\n\r\nexport const getSupplierDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_SUPPLIER_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/suppliers/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_SUPPLIER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_SUPPLIER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Lấy danh sách nhà cung cấp\r\nexport const fetchSuppliers = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_SUPPLIERS_REQUEST });\r\n\r\n        // Gọi API trực tiếp để lấy danh sách nhà cung cấp\r\n        const { data } = await axios.get('/api/v1/suppliers');\r\n        \r\n        dispatch({\r\n            type: GET_SUPPLIERS_SUCCESS,\r\n            payload: data.suppliers,\r\n        });\r\n    } catch (error) {\r\n        const errorMessage = error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({\r\n            type: GET_SUPPLIERS_FAIL,\r\n            payload: errorMessage,\r\n        });\r\n    }\r\n};\r\n\r\n// Thêm mới nhà cung cấp\r\nexport const addSupplier = (supplierData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_SUPPLIER_REQUEST });\r\n\r\n        const config = { headers: { 'Content-Type': 'application/json' } };\r\n\r\n        const { data } = await axios.post('/api/v1/suppliers', supplierData, config);\r\n\r\n        dispatch({\r\n            type: CREATE_SUPPLIER_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_SUPPLIER_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n// Cập nhật nhà cung cấp\r\nexport const updateSupplier = (id, supplierData) => async (dispatch) => {\r\n    try {\r\n        // Gọi API để cập nhật nhà cung cấp\r\n        const { data } = await axios.put(`/api/v1/suppliers/${id}`, supplierData);\r\n\r\n        dispatch({\r\n            type: UPDATE_SUPPLIER_SUCCESS,\r\n            payload: data.supplier,\r\n        });\r\n    } catch (error) {\r\n        const errorMessage = error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({\r\n            type: UPDATE_SUPPLIER_FAIL,\r\n            payload: errorMessage,\r\n        });\r\n    }\r\n};\r\n\r\n// Xóa nhà cung cấp\r\nexport const removeSupplier = (id) => async (dispatch) => {\r\n    try {\r\n        // Gọi API để xóa nhà cung cấp\r\n        await axios.delete(`/api/v1/suppliers/${id}`);\r\n\r\n        dispatch({\r\n            type: DELETE_SUPPLIER_SUCCESS,\r\n            payload: id,\r\n        });\r\n    } catch (error) {\r\n        const errorMessage = error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({\r\n            type: DELETE_SUPPLIER_FAIL,\r\n            payload: errorMessage,\r\n        });\r\n    }\r\n};\r\n\r\nexport const fetchSupplierDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: SUPPLIER_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/suppliers/${id}`);\r\n\r\n        dispatch({\r\n            type: SUPPLIER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUPPLIER_DETAILS_FAIL,\r\n            payload: error.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const clearErrors = () => (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}