{"ast":null,"code":"import { GET_SUPPLIERS_REQUEST, GET_SUPPLIERS_SUCCESS, GET_SUPPLIERS_FAIL, CREATE_SUPPLIER_SUCCESS, CREATE_SUPPLIER_FAIL, DELETE_SUPPLIER_SUCCESS, DELETE_SUPPLIER_FAIL, UPDATE_SUPPLIER_SUCCESS, UPDATE_SUPPLIER_FAIL } from '../constants/supplierConstants';\nimport axios from 'axios'; // Lấy danh sách nhà cung cấp\n\nexport const fetchSuppliers = () => async dispatch => {\n  try {\n    dispatch({\n      type: GET_SUPPLIERS_REQUEST\n    }); // Gọi API trực tiếp để lấy danh sách nhà cung cấp\n\n    const {\n      data\n    } = await axios.get('/api/v1/suppliers');\n    dispatch({\n      type: GET_SUPPLIERS_SUCCESS,\n      payload: data.suppliers\n    });\n  } catch (error) {\n    const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: GET_SUPPLIERS_FAIL,\n      payload: errorMessage\n    });\n  }\n}; // Thêm mới nhà cung cấp\n\nexport const addSupplier = supplierData => async dispatch => {\n  try {\n    // Gọi API để thêm mới nhà cung cấp\n    const {\n      data\n    } = await axios.post('/api/v1/suppliers', supplierData);\n    dispatch({\n      type: CREATE_SUPPLIER_SUCCESS,\n      payload: data.supplier\n    });\n  } catch (error) {\n    const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: CREATE_SUPPLIER_FAIL,\n      payload: errorMessage\n    });\n  }\n}; // Cập nhật nhà cung cấp\n\nexport const editSupplier = (id, supplierData) => async dispatch => {\n  try {\n    // Gọi API để cập nhật nhà cung cấp\n    const {\n      data\n    } = await axios.put(`/api/v1/suppliers/${id}`, supplierData);\n    dispatch({\n      type: UPDATE_SUPPLIER_SUCCESS,\n      payload: data.supplier\n    });\n  } catch (error) {\n    const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: UPDATE_SUPPLIER_FAIL,\n      payload: errorMessage\n    });\n  }\n}; // Xóa nhà cung cấp\n\nexport const removeSupplier = id => async dispatch => {\n  try {\n    // Gọi API để xóa nhà cung cấp\n    await axios.delete(`/api/v1/suppliers/${id}`);\n    dispatch({\n      type: DELETE_SUPPLIER_SUCCESS,\n      payload: id\n    });\n  } catch (error) {\n    const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: DELETE_SUPPLIER_FAIL,\n      payload: errorMessage\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/This PC/OneDrive/Desktop/doan/doan/doan_tiemPizza/frontend/src/actions/supplierActions.js"],"names":["GET_SUPPLIERS_REQUEST","GET_SUPPLIERS_SUCCESS","GET_SUPPLIERS_FAIL","CREATE_SUPPLIER_SUCCESS","CREATE_SUPPLIER_FAIL","DELETE_SUPPLIER_SUCCESS","DELETE_SUPPLIER_FAIL","UPDATE_SUPPLIER_SUCCESS","UPDATE_SUPPLIER_FAIL","axios","fetchSuppliers","dispatch","type","data","get","payload","suppliers","error","errorMessage","response","message","addSupplier","supplierData","post","supplier","editSupplier","id","put","removeSupplier","delete"],"mappings":"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","sourcesContent":["import {\r\n    GET_SUPPLIERS_REQUEST,\r\n    GET_SUPPLIERS_SUCCESS,\r\n    GET_SUPPLIERS_FAIL,\r\n    CREATE_SUPPLIER_SUCCESS,\r\n    CREATE_SUPPLIER_FAIL,\r\n    DELETE_SUPPLIER_SUCCESS,\r\n    DELETE_SUPPLIER_FAIL,\r\n    UPDATE_SUPPLIER_SUCCESS,\r\n    UPDATE_SUPPLIER_FAIL,\r\n} from '../constants/supplierConstants';\r\nimport axios from 'axios';\r\n\r\n// Lấy danh sách nhà cung cấp\r\nexport const fetchSuppliers = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_SUPPLIERS_REQUEST });\r\n\r\n        // Gọi API trực tiếp để lấy danh sách nhà cung cấp\r\n        const { data } = await axios.get('/api/v1/suppliers');\r\n        \r\n        dispatch({\r\n            type: GET_SUPPLIERS_SUCCESS,\r\n            payload: data.suppliers,\r\n        });\r\n    } catch (error) {\r\n        const errorMessage = error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({\r\n            type: GET_SUPPLIERS_FAIL,\r\n            payload: errorMessage,\r\n        });\r\n    }\r\n};\r\n\r\n// Thêm mới nhà cung cấp\r\nexport const addSupplier = (supplierData) => async (dispatch) => {\r\n    try {\r\n        // Gọi API để thêm mới nhà cung cấp\r\n        const { data } = await axios.post('/api/v1/suppliers', supplierData);\r\n\r\n        dispatch({\r\n            type: CREATE_SUPPLIER_SUCCESS,\r\n            payload: data.supplier,\r\n        });\r\n    } catch (error) {\r\n        const errorMessage = error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({\r\n            type: CREATE_SUPPLIER_FAIL,\r\n            payload: errorMessage,\r\n        });\r\n    }\r\n};\r\n\r\n// Cập nhật nhà cung cấp\r\nexport const editSupplier = (id, supplierData) => async (dispatch) => {\r\n    try {\r\n        // Gọi API để cập nhật nhà cung cấp\r\n        const { data } = await axios.put(`/api/v1/suppliers/${id}`, supplierData);\r\n\r\n        dispatch({\r\n            type: UPDATE_SUPPLIER_SUCCESS,\r\n            payload: data.supplier,\r\n        });\r\n    } catch (error) {\r\n        const errorMessage = error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({\r\n            type: UPDATE_SUPPLIER_FAIL,\r\n            payload: errorMessage,\r\n        });\r\n    }\r\n};\r\n\r\n// Xóa nhà cung cấp\r\nexport const removeSupplier = (id) => async (dispatch) => {\r\n    try {\r\n        // Gọi API để xóa nhà cung cấp\r\n        await axios.delete(`/api/v1/suppliers/${id}`);\r\n\r\n        dispatch({\r\n            type: DELETE_SUPPLIER_SUCCESS,\r\n            payload: id,\r\n        });\r\n    } catch (error) {\r\n        const errorMessage = error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message;\r\n        dispatch({\r\n            type: DELETE_SUPPLIER_FAIL,\r\n            payload: errorMessage,\r\n        });\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}