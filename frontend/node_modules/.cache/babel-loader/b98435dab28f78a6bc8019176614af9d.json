{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productsReducer, newProductReducer, productReducer, productDetailsReducer, newReviewReducer, productReviewsReducer, reviewReducer } from './reducers/productReducers';\nimport { authReducer, userReducer, userCreateReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers';\nimport { supplierReducer, supplierDetailsReducer, updateSupplierReducer } from './reducers/supplierReducers';\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: productDetailsReducer,\n  newProduct: newProductReducer,\n  product: productReducer,\n  productReviews: productReviewsReducer,\n  review: reviewReducer,\n  auth: authReducer,\n  user: userReducer,\n  allUsers: allUsersReducer,\n  userDetails: userDetailsReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducer,\n  newOrder: newOrderReducer,\n  myOrders: myOrdersReducer,\n  allOrders: allOrdersReducer,\n  orderDetails: orderDetailsReducer,\n  order: orderReducer,\n  newReview: newReviewReducer,\n  userCreate: userCreateReducer,\n  suppliers: supplierReducer,\n  // Thêm dòng này vào\n  supplierDetails: supplierDetailsReducer,\n  updateSupplier: updateSupplierReducer\n});\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingInfo: localStorage.getItem('shippingInfo') ? JSON.parse(localStorage.getItem('shippingInfo')) : {}\n  }\n};\nconst middlware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/This PC/OneDrive/Desktop/doan/doan/doan_tiemPizza/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productsReducer","newProductReducer","productReducer","productDetailsReducer","newReviewReducer","productReviewsReducer","reviewReducer","authReducer","userReducer","userCreateReducer","forgotPasswordReducer","allUsersReducer","userDetailsReducer","cartReducer","newOrderReducer","myOrdersReducer","orderDetailsReducer","allOrdersReducer","orderReducer","supplierReducer","supplierDetailsReducer","updateSupplierReducer","reducer","products","productDetails","newProduct","product","productReviews","review","auth","user","allUsers","userDetails","forgotPassword","cart","newOrder","myOrders","allOrders","orderDetails","order","newReview","userCreate","suppliers","supplierDetails","updateSupplier","initialState","cartItems","localStorage","getItem","JSON","parse","shippingInfo","middlware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,eAAT,EAA0BC,iBAA1B,EAA6CC,cAA7C,EAA6DC,qBAA7D,EAAoFC,gBAApF,EAAsGC,qBAAtG,EAA6HC,aAA7H,QAAkJ,4BAAlJ;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,iBAAnC,EAAqDC,qBAArD,EAA4EC,eAA5E,EAA6FC,kBAA7F,QAAuH,yBAAvH;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,mBAA3C,EAAgEC,gBAAhE,EAAkFC,YAAlF,QAAsG,0BAAtG;AAEA,SAASC,eAAT,EAA0BC,sBAA1B,EAAkDC,qBAAlD,QAA+E,6BAA/E;AAEA,MAAMC,OAAO,GAAG1B,eAAe,CAAC;AAC5B2B,EAAAA,QAAQ,EAAEvB,eADkB;AAE5BwB,EAAAA,cAAc,EAAErB,qBAFY;AAG5BsB,EAAAA,UAAU,EAAExB,iBAHgB;AAI5ByB,EAAAA,OAAO,EAAExB,cAJmB;AAK5ByB,EAAAA,cAAc,EAAEtB,qBALY;AAM5BuB,EAAAA,MAAM,EAAEtB,aANoB;AAO5BuB,EAAAA,IAAI,EAAEtB,WAPsB;AAQ5BuB,EAAAA,IAAI,EAAEtB,WARsB;AAS5BuB,EAAAA,QAAQ,EAAEpB,eATkB;AAU5BqB,EAAAA,WAAW,EAAEpB,kBAVe;AAW5BqB,EAAAA,cAAc,EAAEvB,qBAXY;AAY5BwB,EAAAA,IAAI,EAAErB,WAZsB;AAa5BsB,EAAAA,QAAQ,EAAErB,eAbkB;AAc5BsB,EAAAA,QAAQ,EAAErB,eAdkB;AAe5BsB,EAAAA,SAAS,EAAEpB,gBAfiB;AAgB5BqB,EAAAA,YAAY,EAAEtB,mBAhBc;AAiB5BuB,EAAAA,KAAK,EAAErB,YAjBqB;AAkB5BsB,EAAAA,SAAS,EAAEpC,gBAlBiB;AAmB5BqC,EAAAA,UAAU,EAAEhC,iBAnBgB;AAoB5BiC,EAAAA,SAAS,EAAEvB,eApBiB;AAoBA;AAC5BwB,EAAAA,eAAe,EAAEvB,sBArBW;AAsB5BwB,EAAAA,cAAc,EAAEvB;AAtBY,CAAD,CAA/B;AA2BA,IAAIwB,YAAY,GAAG;AACfX,EAAAA,IAAI,EAAE;AACFY,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACLC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADK,GAEL,EAHJ;AAIFG,IAAAA,YAAY,EAAEJ,YAAY,CAACC,OAAb,CAAqB,cAArB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADQ,GAER;AANJ;AADS,CAAnB;AAWA,MAAMI,SAAS,GAAG,CAACtD,KAAD,CAAlB;AACA,MAAMuD,KAAK,GAAG1D,WAAW,CAAC2B,OAAD,EAAUuB,YAAV,EAAwB9C,mBAAmB,CAACF,eAAe,CAAC,GAAGuD,SAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { productsReducer, newProductReducer, productReducer, productDetailsReducer, newReviewReducer, productReviewsReducer, reviewReducer } from './reducers/productReducers'\nimport { authReducer, userReducer, userCreateReducer,forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers'\n\nimport { supplierReducer, supplierDetailsReducer, updateSupplierReducer } from './reducers/supplierReducers';\n\nconst reducer = combineReducers({\n    products: productsReducer,\n    productDetails: productDetailsReducer,\n    newProduct: newProductReducer,\n    product: productReducer,\n    productReviews: productReviewsReducer,\n    review: reviewReducer,\n    auth: authReducer,\n    user: userReducer,\n    allUsers: allUsersReducer,\n    userDetails: userDetailsReducer,\n    forgotPassword: forgotPasswordReducer,\n    cart: cartReducer,\n    newOrder: newOrderReducer,\n    myOrders: myOrdersReducer,\n    allOrders: allOrdersReducer,\n    orderDetails: orderDetailsReducer,\n    order: orderReducer,\n    newReview: newReviewReducer,\n    userCreate: userCreateReducer,\n    suppliers: supplierReducer, // Thêm dòng này vào\n    supplierDetails: supplierDetailsReducer,\n    updateSupplier: updateSupplierReducer\n})\n\n\n\nlet initialState = {\n    cart: {\n        cartItems: localStorage.getItem('cartItems')\n            ? JSON.parse(localStorage.getItem('cartItems'))\n            : [],\n        shippingInfo: localStorage.getItem('shippingInfo')\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\n            : {}\n    }\n}\n\nconst middlware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)))\n\nexport default store;"]},"metadata":{},"sourceType":"module"}